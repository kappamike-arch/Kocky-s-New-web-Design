// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/analytics" | "/calendar" | "/content" | "/crm" | "/crm/inquiries/[id]" | "/crm/inquiries/[id]/quote" | "/dashboard" | "/email" | "/email-studio" | "/email-studio/[templateId]" | "/email-templates" | "/email-templates/[id]/edit" | "/email-templates/new" | "/email/campaigns" | "/email/contacts" | "/events" | "/events/[id]" | "/events/new" | "/food-truck" | "/gallery" | "/hero-settings" | "/inquiries/[id]/quote" | "/jobs" | "/login" | "/media" | "/menu" | "/menu-management" | "/mobile-bar" | "/orders" | "/page-content" | "/quote-config" | "/quotes" | "/quotes/[id]/edit" | "/quotes/new" | "/reservations" | "/service-settings" | "/settings" | "/users"
type AppRouteHandlerRoutes = "/admin/api/settings" | "/api/auth/log" | "/api/auth/session" | "/api/email/send" | "/api/email/templates/[templateId]" | "/api/settings" | "/api/upload-media"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/admin/api/settings": {}
  "/analytics": {}
  "/api/auth/log": {}
  "/api/auth/session": {}
  "/api/email/send": {}
  "/api/email/templates/[templateId]": { "templateId": string; }
  "/api/settings": {}
  "/api/upload-media": {}
  "/calendar": {}
  "/content": {}
  "/crm": {}
  "/crm/inquiries/[id]": { "id": string; }
  "/crm/inquiries/[id]/quote": { "id": string; }
  "/dashboard": {}
  "/email": {}
  "/email-studio": {}
  "/email-studio/[templateId]": { "templateId": string; }
  "/email-templates": {}
  "/email-templates/[id]/edit": { "id": string; }
  "/email-templates/new": {}
  "/email/campaigns": {}
  "/email/contacts": {}
  "/events": {}
  "/events/[id]": { "id": string; }
  "/events/new": {}
  "/food-truck": {}
  "/gallery": {}
  "/hero-settings": {}
  "/inquiries/[id]/quote": { "id": string; }
  "/jobs": {}
  "/login": {}
  "/media": {}
  "/menu": {}
  "/menu-management": {}
  "/mobile-bar": {}
  "/orders": {}
  "/page-content": {}
  "/quote-config": {}
  "/quotes": {}
  "/quotes/[id]/edit": { "id": string; }
  "/quotes/new": {}
  "/reservations": {}
  "/service-settings": {}
  "/settings": {}
  "/users": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
