// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../src/app/analytics/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/analytics">> = Specific
  const handler = {} as typeof import("../../src/app/analytics/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/calendar/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/calendar">> = Specific
  const handler = {} as typeof import("../../src/app/calendar/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/catering/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/catering">> = Specific
  const handler = {} as typeof import("../../src/app/catering/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/content/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/content">> = Specific
  const handler = {} as typeof import("../../src/app/content/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/crm/inquiries/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/crm/inquiries/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/crm/inquiries/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/crm/inquiries/[id]/quote/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/crm/inquiries/[id]/quote">> = Specific
  const handler = {} as typeof import("../../src/app/crm/inquiries/[id]/quote/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/crm/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/crm">> = Specific
  const handler = {} as typeof import("../../src/app/crm/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard">> = Specific
  const handler = {} as typeof import("../../src/app/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/email-studio/[templateId]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/email-studio/[templateId]">> = Specific
  const handler = {} as typeof import("../../src/app/email-studio/[templateId]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/email-studio/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/email-studio">> = Specific
  const handler = {} as typeof import("../../src/app/email-studio/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/email-templates/[id]/edit/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/email-templates/[id]/edit">> = Specific
  const handler = {} as typeof import("../../src/app/email-templates/[id]/edit/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/email-templates/new/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/email-templates/new">> = Specific
  const handler = {} as typeof import("../../src/app/email-templates/new/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/email-templates/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/email-templates">> = Specific
  const handler = {} as typeof import("../../src/app/email-templates/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/email/campaigns/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/email/campaigns">> = Specific
  const handler = {} as typeof import("../../src/app/email/campaigns/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/email/contacts/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/email/contacts">> = Specific
  const handler = {} as typeof import("../../src/app/email/contacts/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/email/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/email">> = Specific
  const handler = {} as typeof import("../../src/app/email/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/events/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/events/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/events/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/events/new/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/events/new">> = Specific
  const handler = {} as typeof import("../../src/app/events/new/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/events/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/events">> = Specific
  const handler = {} as typeof import("../../src/app/events/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/food-truck/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/food-truck">> = Specific
  const handler = {} as typeof import("../../src/app/food-truck/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/gallery/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/gallery">> = Specific
  const handler = {} as typeof import("../../src/app/gallery/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/hero-settings/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/hero-settings">> = Specific
  const handler = {} as typeof import("../../src/app/hero-settings/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/inquiries/[id]/quote/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/inquiries/[id]/quote">> = Specific
  const handler = {} as typeof import("../../src/app/inquiries/[id]/quote/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/jobs/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/jobs">> = Specific
  const handler = {} as typeof import("../../src/app/jobs/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/login/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/login">> = Specific
  const handler = {} as typeof import("../../src/app/login/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/media/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/media">> = Specific
  const handler = {} as typeof import("../../src/app/media/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/menu-management/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/menu-management">> = Specific
  const handler = {} as typeof import("../../src/app/menu-management/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/menu/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/menu">> = Specific
  const handler = {} as typeof import("../../src/app/menu/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/mobile-bar/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/mobile-bar">> = Specific
  const handler = {} as typeof import("../../src/app/mobile-bar/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/orders/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/orders">> = Specific
  const handler = {} as typeof import("../../src/app/orders/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/page-content/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/page-content">> = Specific
  const handler = {} as typeof import("../../src/app/page-content/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/quote-config/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/quote-config">> = Specific
  const handler = {} as typeof import("../../src/app/quote-config/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/quotes/[id]/edit/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/quotes/[id]/edit">> = Specific
  const handler = {} as typeof import("../../src/app/quotes/[id]/edit/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/quotes/new/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/quotes/new">> = Specific
  const handler = {} as typeof import("../../src/app/quotes/new/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/quotes/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/quotes">> = Specific
  const handler = {} as typeof import("../../src/app/quotes/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/reservations/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/reservations">> = Specific
  const handler = {} as typeof import("../../src/app/reservations/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/service-settings/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/service-settings">> = Specific
  const handler = {} as typeof import("../../src/app/service-settings/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/settings/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/settings">> = Specific
  const handler = {} as typeof import("../../src/app/settings/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/test-api/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/test-api">> = Specific
  const handler = {} as typeof import("../../src/app/test-api/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/test-catering/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/test-catering">> = Specific
  const handler = {} as typeof import("../../src/app/test-catering/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/test-js/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/test-js">> = Specific
  const handler = {} as typeof import("../../src/app/test-js/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/users/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/users">> = Specific
  const handler = {} as typeof import("../../src/app/users/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/api/settings/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/admin/api/settings">> = Specific
  const handler = {} as typeof import("../../src/app/admin/api/settings/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/auth/log/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/log">> = Specific
  const handler = {} as typeof import("../../src/app/api/auth/log/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/auth/session/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/session">> = Specific
  const handler = {} as typeof import("../../src/app/api/auth/session/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/email/send/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/email/send">> = Specific
  const handler = {} as typeof import("../../src/app/api/email/send/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/email/templates/[templateId]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/email/templates/[templateId]">> = Specific
  const handler = {} as typeof import("../../src/app/api/email/templates/[templateId]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/settings/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/settings">> = Specific
  const handler = {} as typeof import("../../src/app/api/settings/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/upload-media/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/upload-media">> = Specific
  const handler = {} as typeof import("../../src/app/api/upload-media/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../src/app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
