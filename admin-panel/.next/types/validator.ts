// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/dist/lib/metadata/types/metadata-interface.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../src/app/analytics/page.tsx
{
  const handler = {} as typeof import("../../src/app/analytics/page.js")
  handler satisfies AppPageConfig<"/analytics">
}

// Validate ../../src/app/calendar/page.tsx
{
  const handler = {} as typeof import("../../src/app/calendar/page.js")
  handler satisfies AppPageConfig<"/calendar">
}

// Validate ../../src/app/content/page.tsx
{
  const handler = {} as typeof import("../../src/app/content/page.js")
  handler satisfies AppPageConfig<"/content">
}

// Validate ../../src/app/crm/inquiries/[id]/page.tsx
{
  const handler = {} as typeof import("../../src/app/crm/inquiries/[id]/page.js")
  handler satisfies AppPageConfig<"/crm/inquiries/[id]">
}

// Validate ../../src/app/crm/inquiries/[id]/quote/page.tsx
{
  const handler = {} as typeof import("../../src/app/crm/inquiries/[id]/quote/page.js")
  handler satisfies AppPageConfig<"/crm/inquiries/[id]/quote">
}

// Validate ../../src/app/crm/page.tsx
{
  const handler = {} as typeof import("../../src/app/crm/page.js")
  handler satisfies AppPageConfig<"/crm">
}

// Validate ../../src/app/dashboard/page.tsx
{
  const handler = {} as typeof import("../../src/app/dashboard/page.js")
  handler satisfies AppPageConfig<"/dashboard">
}

// Validate ../../src/app/email-studio/[templateId]/page.tsx
{
  const handler = {} as typeof import("../../src/app/email-studio/[templateId]/page.js")
  handler satisfies AppPageConfig<"/email-studio/[templateId]">
}

// Validate ../../src/app/email-studio/page.tsx
{
  const handler = {} as typeof import("../../src/app/email-studio/page.js")
  handler satisfies AppPageConfig<"/email-studio">
}

// Validate ../../src/app/email-templates/[id]/edit/page.tsx
{
  const handler = {} as typeof import("../../src/app/email-templates/[id]/edit/page.js")
  handler satisfies AppPageConfig<"/email-templates/[id]/edit">
}

// Validate ../../src/app/email-templates/new/page.tsx
{
  const handler = {} as typeof import("../../src/app/email-templates/new/page.js")
  handler satisfies AppPageConfig<"/email-templates/new">
}

// Validate ../../src/app/email-templates/page.tsx
{
  const handler = {} as typeof import("../../src/app/email-templates/page.js")
  handler satisfies AppPageConfig<"/email-templates">
}

// Validate ../../src/app/email/campaigns/page.tsx
{
  const handler = {} as typeof import("../../src/app/email/campaigns/page.js")
  handler satisfies AppPageConfig<"/email/campaigns">
}

// Validate ../../src/app/email/contacts/page.tsx
{
  const handler = {} as typeof import("../../src/app/email/contacts/page.js")
  handler satisfies AppPageConfig<"/email/contacts">
}

// Validate ../../src/app/email/page.tsx
{
  const handler = {} as typeof import("../../src/app/email/page.js")
  handler satisfies AppPageConfig<"/email">
}

// Validate ../../src/app/events/[id]/page.tsx
{
  const handler = {} as typeof import("../../src/app/events/[id]/page.js")
  handler satisfies AppPageConfig<"/events/[id]">
}

// Validate ../../src/app/events/new/page.tsx
{
  const handler = {} as typeof import("../../src/app/events/new/page.js")
  handler satisfies AppPageConfig<"/events/new">
}

// Validate ../../src/app/events/page.tsx
{
  const handler = {} as typeof import("../../src/app/events/page.js")
  handler satisfies AppPageConfig<"/events">
}

// Validate ../../src/app/food-truck/page.tsx
{
  const handler = {} as typeof import("../../src/app/food-truck/page.js")
  handler satisfies AppPageConfig<"/food-truck">
}

// Validate ../../src/app/gallery/page.tsx
{
  const handler = {} as typeof import("../../src/app/gallery/page.js")
  handler satisfies AppPageConfig<"/gallery">
}

// Validate ../../src/app/hero-settings/page.tsx
{
  const handler = {} as typeof import("../../src/app/hero-settings/page.js")
  handler satisfies AppPageConfig<"/hero-settings">
}

// Validate ../../src/app/inquiries/[id]/quote/page.tsx
{
  const handler = {} as typeof import("../../src/app/inquiries/[id]/quote/page.js")
  handler satisfies AppPageConfig<"/inquiries/[id]/quote">
}

// Validate ../../src/app/jobs/page.tsx
{
  const handler = {} as typeof import("../../src/app/jobs/page.js")
  handler satisfies AppPageConfig<"/jobs">
}

// Validate ../../src/app/login/page.tsx
{
  const handler = {} as typeof import("../../src/app/login/page.js")
  handler satisfies AppPageConfig<"/login">
}

// Validate ../../src/app/media/page.tsx
{
  const handler = {} as typeof import("../../src/app/media/page.js")
  handler satisfies AppPageConfig<"/media">
}

// Validate ../../src/app/menu-management/page.tsx
{
  const handler = {} as typeof import("../../src/app/menu-management/page.js")
  handler satisfies AppPageConfig<"/menu-management">
}

// Validate ../../src/app/menu/page.tsx
{
  const handler = {} as typeof import("../../src/app/menu/page.js")
  handler satisfies AppPageConfig<"/menu">
}

// Validate ../../src/app/mobile-bar/page.tsx
{
  const handler = {} as typeof import("../../src/app/mobile-bar/page.js")
  handler satisfies AppPageConfig<"/mobile-bar">
}

// Validate ../../src/app/orders/page.tsx
{
  const handler = {} as typeof import("../../src/app/orders/page.js")
  handler satisfies AppPageConfig<"/orders">
}

// Validate ../../src/app/page-content/page.tsx
{
  const handler = {} as typeof import("../../src/app/page-content/page.js")
  handler satisfies AppPageConfig<"/page-content">
}

// Validate ../../src/app/page.tsx
{
  const handler = {} as typeof import("../../src/app/page.js")
  handler satisfies AppPageConfig<"/">
}

// Validate ../../src/app/quote-config/page.tsx
{
  const handler = {} as typeof import("../../src/app/quote-config/page.js")
  handler satisfies AppPageConfig<"/quote-config">
}

// Validate ../../src/app/quotes/[id]/edit/page.tsx
{
  const handler = {} as typeof import("../../src/app/quotes/[id]/edit/page.js")
  handler satisfies AppPageConfig<"/quotes/[id]/edit">
}

// Validate ../../src/app/quotes/new/page.tsx
{
  const handler = {} as typeof import("../../src/app/quotes/new/page.js")
  handler satisfies AppPageConfig<"/quotes/new">
}

// Validate ../../src/app/quotes/page.tsx
{
  const handler = {} as typeof import("../../src/app/quotes/page.js")
  handler satisfies AppPageConfig<"/quotes">
}

// Validate ../../src/app/reservations/page.tsx
{
  const handler = {} as typeof import("../../src/app/reservations/page.js")
  handler satisfies AppPageConfig<"/reservations">
}

// Validate ../../src/app/service-settings/page.tsx
{
  const handler = {} as typeof import("../../src/app/service-settings/page.js")
  handler satisfies AppPageConfig<"/service-settings">
}

// Validate ../../src/app/settings/page.tsx
{
  const handler = {} as typeof import("../../src/app/settings/page.js")
  handler satisfies AppPageConfig<"/settings">
}

// Validate ../../src/app/users/page.tsx
{
  const handler = {} as typeof import("../../src/app/users/page.js")
  handler satisfies AppPageConfig<"/users">
}

// Validate ../../src/app/admin/api/settings/route.ts
{
  const handler = {} as typeof import("../../src/app/admin/api/settings/route.js")
  handler satisfies RouteHandlerConfig<"/admin/api/settings">
}

// Validate ../../src/app/api/auth/log/route.ts
{
  const handler = {} as typeof import("../../src/app/api/auth/log/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/log">
}

// Validate ../../src/app/api/auth/session/route.ts
{
  const handler = {} as typeof import("../../src/app/api/auth/session/route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/session">
}

// Validate ../../src/app/api/email/send/route.ts
{
  const handler = {} as typeof import("../../src/app/api/email/send/route.js")
  handler satisfies RouteHandlerConfig<"/api/email/send">
}

// Validate ../../src/app/api/email/templates/[templateId]/route.ts
{
  const handler = {} as typeof import("../../src/app/api/email/templates/[templateId]/route.js")
  handler satisfies RouteHandlerConfig<"/api/email/templates/[templateId]">
}

// Validate ../../src/app/api/settings/route.ts
{
  const handler = {} as typeof import("../../src/app/api/settings/route.js")
  handler satisfies RouteHandlerConfig<"/api/settings">
}

// Validate ../../src/app/api/upload-media/route.ts
{
  const handler = {} as typeof import("../../src/app/api/upload-media/route.js")
  handler satisfies RouteHandlerConfig<"/api/upload-media">
}





// Validate ../../src/app/layout.tsx
{
  const handler = {} as typeof import("../../src/app/layout.js")
  handler satisfies LayoutConfig<"/">
}
